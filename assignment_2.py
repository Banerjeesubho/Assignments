# -*- coding: utf-8 -*-
"""Assignment_2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q3OSJt32b_gHj0-X6RKQJYePWTT0wIi7

# Answers

#1. What are the two values of the Boolean data type? How do you write them?

### There are two values of the Boolean data type in python
 * **'TRUE'** 
 * **'FALSE'**.

### We write them as **'T'** for **'TRUE' **and **'F'** for **'FALSE'** .
"""



"""#2. What are the three different types of Boolean operators?

### There are three different types of Boolean operators
* **AND**
* **OR**
* **NOT**
"""



"""#3. Make a list of each Boolean operator's truth tables (i.e. every possible combination of Boolean values for the operator and what it evaluate ).

##The 'and' Operator’s Truth Table
---
---
###Expression <------------------------------------------------------------------->         Evaluates to
---
---

* True and True  <-------------------------------------------------------------------> True

* True and False <-------------------------------------------------------------------> False

* False and True <-------------------------------------------------------------------> False

* False and False <-------------------------------------------------------------------> False

---

##The 'or' Operator’s Truth Table

---
---
###Expression <------------------------------------------------------------------->         Evaluates to
---
---
* True or True  <-------------------------------------------------------------------> True

* True or False <-------------------------------------------------------------------> Ture

* False or True <-------------------------------------------------------------------> True

* False or False <-------------------------------------------------------------------> False

---

##The 'not' Operator’s Truth Table
---
---
###Expression <------------------------------------------------------------------->         Evaluates to
---
---
* not True <-------------------------------------------------------------------> False

* not False <------------------------------------------------------------------->  True
---
"""



"""#4. What are the values of the following expressions?

### The values of the following expressions are
"""



"""### (5 > 4) and (3 == 5) --> False"""

(5 > 4) and (3 == 5)

"""### not(5 > 4) --> False"""

not(5 > 4)

"""### not(5 > 4) and (3 == 5) --> False"""

not(5 > 4) and (3 == 5)

"""### (True and True) and (True == False) --> False"""

(True and True) and (True == False)

"""### (not False) or (not True) --> True"""

(not False) or (not True)



"""#5. What are the six comparison operators?

### The six comparison operators are:


*   less than ( < )
*   greater than ( > )
*   less than or equal to ( <= )
*   greater than or equal to ( >= )
*   equal to ( == )
*   not equal to ( != )
"""



"""#6. How do you tell the difference between the equal to and assignment operators?Describe a condition and when you would use one.

* The '=' is an assignment operator and it is used to assign the result of the expression on the right side of the operator to the variable on the left side.


* The ‘==’ is an equal to operator checks whether the two given operands are equal or not. If so, it returns true. Otherwise it returns false.


"""

A=2 # Here i use assignment operator '=' to assign a value of 'A'
B=3 # Here i use assignment operator '=' to assign a value of 'B'
print(A==B) # Here I use equal to operator '==' to check whether 'A' and 'B' equal or not



"""#7.Identify the three blocks in this code:


"""

spam = 0
if spam == 10:
    print('eggs')       # indent increased, block A
    if spam > 5:        # still block A
        print('bacon')  # still block A, indent increased, block B inside block A
    else:               # still block A, indent decreased, block B ended in line above
        print('ham')    # still block A, indent increased, block C inside block A
    print('spam')       # still block A, indent decreased, block C ended in line above
print('spam')           # indent decreased, block A ended in line above



"""#8. Write code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints
Greetings! if anything else is stored in spam.
### A code that prints Hello if 1 is stored in spam, prints Howdy if 2 is stored in spam, and prints Greetings! if anything else is stored in spam.
"""

spam=int(input("Input the vale of spam: "))
if spam==1:
  print("Hello")
elif spam==2:
  print("Howdy")
else:
  print("Greetings!")



"""#9. If your programme is stuck in an endless loop, what keys you’ll press?

### If programme is stuck in an endless loop, then we should press 'ctrl+C'.
"""



"""#10. How can you tell the difference between break and continue?
### The difference between break and continue is, a break statement is used to terminate the loop whenever a particular condition is satisfied but the continue statement skips the remaining lines of code, for the current iteration of the loop. In this case, the loop does not end, it continues with the next iteration.
"""

# break statement
while True:
  print("please enter your name:")
  name=input()
  if name=="ABC":
    break
print("welcome sir")

# continue statement
while True:
  print("please enter your name:")
  name=input()
  if name!="acb":
    continue
  print("what is your coding language? (python / java) ")
  coding_language=input()  
  if coding_language == "python":  
    break
print("welcome sir")



"""#11.In a for loop, what is the difference between range(10), range(0, 10), and range(0, 10, 1)?

###Range(10):

### When we call range(10), we will get a series of numbers that starts at 0 and includes every whole number up to 10, but not including 10.
"""

#range(10)
for i in range(10):
  print(i)

"""###Range(0,10):

###When we call range(0,10) then we get a number series which is from 0 up to 10, bt not including 10, means we can decide not only where the series of numbers stops but also where it starts.
"""

#range(0,10)
for i in range(0,10):
  print(i)

"""###Range(0,10,1):


###If we call range(0,10,1), we get a number series which is from 0 up to 10 by intervals of 1.
"""

#range(0,10,1)
for i in range(0,10,1):
  print(i)

"""###So actually there is no differnce between range(10), range(0,10) and range(0,10,1)."""



"""##12. Write a short program that prints the numbers 1 to 10 using a for loop. Then write an equivalent program that prints the numbers 1 to 10 using a while loop

###A short program that prints the numbers 1 to 10 using a while loop.
"""

i=1
while(i<=10):
  print(i)
  i=i+1

"""### A short program that prints the numbers 1 to 10 using a for loop."""

for i in range(1,11):
  print(i)



"""#13.If you had a function named bacon() inside a module named spam, how would you call it after importing spam?

###This function can be called with spam.bacon()
"""

